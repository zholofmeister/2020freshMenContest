爬山

Problem Description
小明想要在周末锻炼身体，于是他选择去学校旁边爬山，学校旁边共有n座山，且从1~n进行编号，所有的山呈一字排开，且山的周围是茂密的树林，无法通行，仅有相邻(位置相邻代表编号相邻)的山之间有小道能够通行，这意味着，如果你想从一座山到另一座山，你必须经过这两座山中间的所有山，也就是说，我们可以把山看成是数轴上的一串整点。小明上山会消耗体力，下山则趁机补充体力，从一座高度为a的山到相邻的一座高度为b的体力变化为(b+a)*(b-a)，小明的体力有限，他想事先计算出从某些山到另外某些山的体力变化是多少，请你帮助他。

Input
第一行为一个整数T(1<=T<=100),代表数据组数。
每组数据的第一行为一个整数n(2<=n<=1*10^5),代表山的数量。
接下来一行由n个由一个空格隔开的数字h[i](1<=h[i]<=1000,1<=i<=n)组成，代表每座山的高度。
接下来的一行为一个整数q,代表询问的次数。
接下来q(1<=q<=1*10^3)行，每行两个数字a,b,代表询问你从编号a的山到编号b的山，小明的体力变化是多少。
(输入数据量较大，建议使用scanf)。

Output
每组数据输出q行，每行一个整数————询问的答案。

样例解释：
从1号山到2号山体力变化为(2-2)*(2+2)=0。
从2号山到3号山体力变化为(1-2)*(1+2)=0。
从3号山到1号山体力变化为(2-1)*(2+1)+(2-2)*(2+2)=3。

Sample Input
1
4
2 2 1 4
3
1 2
2 3
3 1

Sample Output
0
-3
3
